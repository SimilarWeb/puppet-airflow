# -*- coding: utf-8 -*-

import os
from airflow import configuration as conf

basedir = os.path.abspath(os.path.dirname(__file__))

# The SQLAlchemy connection string.
SQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')

# Flask-WTF flag for CSRF
CSRF_ENABLED = True

# ----------------------------------------------------
# AUTHENTICATION CONFIG
# ----------------------------------------------------

# The authentication type
# AUTH_OID : Is for OpenID
# AUTH_DB : Is for database
# AUTH_LDAP : Is for LDAP
# AUTH_REMOTE_USER : Is for using REMOTE_USER from web server
# AUTH_OAUTH : Is for OAuth
from flask_appbuilder.security.manager import AUTH_<%= @auth_backend.upcase %>

AUTH_TYPE = AUTH_<%= @auth_backend.upcase %>

<%- if @auth_user_registration_role -%>
# Will allow user self registration
AUTH_USER_REGISTRATION = True

AUTH_USER_REGISTRATION_ROLE = "<%= @auth_user_registration_role %>"
<%- end -%>

<% if @auth_backend == 'LDAP' -%>
<% @auth_details.each do |key, value| %>
AUTH_LDAP_<%= key.upcase %> = <%= value -%>
<% end -%>
<% elsif ['OAUTH', 'OPENID'].include?(@auth_backend) -%>
<%= @auth_backend %>_PROVIDERS = <%= @auth_details.to_json.gsub(/\bnull\b/, 'None') %>
<% end -%>
